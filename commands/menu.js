const figlet = require('figlet');
const delay = (ms) => new Promise(resolve => setTimeout(resolve, ms));
const config = require('../config');
const getLang = require('../settings/language');
const lang = getLang(config.language); // Load language settings

const menuCommand = async (sock, msg) => {
  const from = msg.key.remoteJid;

  // Typing effect
  await sock.sendPresenceUpdate('composing', from);
  await delay(400);

  // Big B.E.L.T.A.H Banner
  const bigText = figlet.textSync('B.E.L.T.A.H', {
    font: 'Standard',
    horizontalLayout: 'default',
    verticalLayout: 'default'
  });

  // Send banner
  await sock.sendMessage(from, { text: '```' + bigText + '```' }, { quoted: msg });
  await delay(900);

  // Main menu message
  const menuMessage = `
${lang.menuHeader}

â•­â”€â”€[ ðŸ§  AI FEATURES ]â”€â”€â­“
â”‚ â€¢ .chat [msg] â€“ ${lang.aiChat}
â”‚ â€¢ .romantic [msg] â€“ ${lang.aiRomantic}
â”‚ â€¢ .swahili [msg] â€“ ${lang.aiSwahili}
â•°â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â­•

â•­â”€â”€[ ðŸŽ¯ FUN ZONE ]â”€â”€â­“
â”‚ â€¢ .truth â€“ ${lang.funTruth}
â”‚ â€¢ .dare â€“ ${lang.funDare}
â•°â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â­•

â•­â”€â”€[ ðŸ›  GENERAL ]â”€â”€â­“
â”‚ â€¢ .ping â€“ ${lang.genPing}
â”‚ â€¢ .menu â€“ ${lang.genMenu}
â”‚ â€¢ .owner â€“ ${lang.genOwner}
â•°â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â­•

â•­â”€â”€[ ðŸŽ¨ MEDIA TOOLS ]â”€â”€â­“
â”‚ â€¢ .sticker â€“ ${lang.mediaSticker}
â”‚ â€¢ .attp [text] â€“ ${lang.mediaATTP}
â•°â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â­•

â•­â”€â”€[ ðŸ”’ GROUP ADMIN ]â”€â”€â­“
â”‚ â€¢ .kick @user â€“ ${lang.adminKick}
â”‚ â€¢ .mute â€“ ${lang.adminMute}
â”‚ â€¢ .unmute â€“ ${lang.adminUnmute}
â•°â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â­•

${lang.botStatus}
ðŸ“… Date: ${new Date().toLocaleDateString()}
ðŸ•° Time: ${new Date().toLocaleTimeString()}

${lang.help}
`;

  await sock.sendMessage(from, { text: menuMessage }, { quoted: msg });
};

module.exports = menuCommand;
